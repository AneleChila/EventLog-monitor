//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MyEmployee.ServiceReference1 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Event", Namespace="http://schemas.datacontract.org/2004/07/EventLog")]
    [System.SerializableAttribute()]
    public partial class Event : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ETAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyEmployee.ServiceReference1.EventTypeFlag EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyEmployee.ServiceReference1.StatusFlag StatusFlagField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ETA {
            get {
                return this.ETAField;
            }
            set {
                if ((this.ETAField.Equals(value) != true)) {
                    this.ETAField = value;
                    this.RaisePropertyChanged("ETA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyEmployee.ServiceReference1.EventTypeFlag EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyEmployee.ServiceReference1.StatusFlag StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventTypeFlag", Namespace="http://schemas.datacontract.org/2004/07/EventLog")]
    public enum EventTypeFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Lock = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        UnLock = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        DefaultLock = 2,
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="StatusFlag", Namespace="http://schemas.datacontract.org/2004/07/EventLog")]
    public enum StatusFlag : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwayExpectingReturn = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        AwayLongerThanExpected = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        At_desk = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Gone_Home = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Status", Namespace="http://schemas.datacontract.org/2004/07/EventLog")]
    [System.SerializableAttribute()]
    public partial class Status : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ETAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyEmployee.ServiceReference1.StatusFlag StatusFlagField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ETA {
            get {
                return this.ETAField;
            }
            set {
                if ((this.ETAField.Equals(value) != true)) {
                    this.ETAField = value;
                    this.RaisePropertyChanged("ETA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyEmployee.ServiceReference1.StatusFlag StatusFlag {
            get {
                return this.StatusFlagField;
            }
            set {
                if ((this.StatusFlagField.Equals(value) != true)) {
                    this.StatusFlagField = value;
                    this.RaisePropertyChanged("StatusFlag");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="EventsLog", Namespace="http://schemas.datacontract.org/2004/07/EventLog")]
    [System.SerializableAttribute()]
    public partial class EventsLog : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<System.DateTime> DateTimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime ETAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyEmployee.ServiceReference1.EventTypeFlag EventTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private MyEmployee.ServiceReference1.StatusFlag StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool isRemoteSessionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<System.DateTime> DateTime {
            get {
                return this.DateTimeField;
            }
            set {
                if ((this.DateTimeField.Equals(value) != true)) {
                    this.DateTimeField = value;
                    this.RaisePropertyChanged("DateTime");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime ETA {
            get {
                return this.ETAField;
            }
            set {
                if ((this.ETAField.Equals(value) != true)) {
                    this.ETAField = value;
                    this.RaisePropertyChanged("ETA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyEmployee.ServiceReference1.EventTypeFlag EventType {
            get {
                return this.EventTypeField;
            }
            set {
                if ((this.EventTypeField.Equals(value) != true)) {
                    this.EventTypeField = value;
                    this.RaisePropertyChanged("EventType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Id {
            get {
                return this.IdField;
            }
            set {
                if ((object.ReferenceEquals(this.IdField, value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public MyEmployee.ServiceReference1.StatusFlag Status {
            get {
                return this.StatusField;
            }
            set {
                if ((this.StatusField.Equals(value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool isRemoteSession {
            get {
                return this.isRemoteSessionField;
            }
            set {
                if ((this.isRemoteSessionField.Equals(value) != true)) {
                    this.isRemoteSessionField = value;
                    this.RaisePropertyChanged("isRemoteSession");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.EventLogInterface")]
    public interface EventLogInterface {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventLogInterface/Create", ReplyAction="http://tempuri.org/EventLogInterface/CreateResponse")]
        void Create(MyEmployee.ServiceReference1.Event message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventLogInterface/Create", ReplyAction="http://tempuri.org/EventLogInterface/CreateResponse")]
        System.Threading.Tasks.Task CreateAsync(MyEmployee.ServiceReference1.Event message);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventLogInterface/GetStatus", ReplyAction="http://tempuri.org/EventLogInterface/GetStatusResponse")]
        MyEmployee.ServiceReference1.Status[] GetStatus();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventLogInterface/GetStatus", ReplyAction="http://tempuri.org/EventLogInterface/GetStatusResponse")]
        System.Threading.Tasks.Task<MyEmployee.ServiceReference1.Status[]> GetStatusAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventLogInterface/GetHistory", ReplyAction="http://tempuri.org/EventLogInterface/GetHistoryResponse")]
        MyEmployee.ServiceReference1.EventsLog[] GetHistory(string username, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/EventLogInterface/GetHistory", ReplyAction="http://tempuri.org/EventLogInterface/GetHistoryResponse")]
        System.Threading.Tasks.Task<MyEmployee.ServiceReference1.EventsLog[]> GetHistoryAsync(string username, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface EventLogInterfaceChannel : MyEmployee.ServiceReference1.EventLogInterface, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class EventLogInterfaceClient : System.ServiceModel.ClientBase<MyEmployee.ServiceReference1.EventLogInterface>, MyEmployee.ServiceReference1.EventLogInterface {
        
        public EventLogInterfaceClient() {
        }
        
        public EventLogInterfaceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public EventLogInterfaceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventLogInterfaceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public EventLogInterfaceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Create(MyEmployee.ServiceReference1.Event message) {
            base.Channel.Create(message);
        }
        
        public System.Threading.Tasks.Task CreateAsync(MyEmployee.ServiceReference1.Event message) {
            return base.Channel.CreateAsync(message);
        }
        
        public MyEmployee.ServiceReference1.Status[] GetStatus() {
            return base.Channel.GetStatus();
        }
        
        public System.Threading.Tasks.Task<MyEmployee.ServiceReference1.Status[]> GetStatusAsync() {
            return base.Channel.GetStatusAsync();
        }
        
        public MyEmployee.ServiceReference1.EventsLog[] GetHistory(string username, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetHistory(username, startDate, endDate);
        }
        
        public System.Threading.Tasks.Task<MyEmployee.ServiceReference1.EventsLog[]> GetHistoryAsync(string username, System.Nullable<System.DateTime> startDate, System.Nullable<System.DateTime> endDate) {
            return base.Channel.GetHistoryAsync(username, startDate, endDate);
        }
    }
}
